461. Hamming Distance.
	异或运算符：^

476. Number Complement.
	移位运算符：<<，>>

500. Keyboard Row.
	集合运算符：交集&、并集|、差集-
	
419. Battleships in a Board.
	Nothing special.
	
338. Counting Bits.
	列表append()函数比赋值要慢，所以可以考虑先初始化列表，再赋值，而不是逐一append。
	
412. Fizz Buzz.
	Nothing special.
	
344. Reverse String.
	列表切片双冒号用法表示隔位取，如s = '123456'，s[::2]输出'135'（隔一位取一个），s[::3]输出‘14’（隔两位取一个）。特殊用法::-1表示逆向取，即s[::-1]输出'654321'。
	
496. Next Greater Element I.
	考察stack的使用。
	
463. Island Perimeter.
	Nothing special.
	
513. Find Bottom Left Tree Value.
	考察BFS。
	使用列表实现队列，并且使用for循环一边遍历队列一边动态更新队列。
	filter()用法：filter(func, list)返回一个新的list，其中每个元素作为输入func后均返回True。func可以自定义。特殊用法filter(None, list)：func为None时则逐一判断list中的元素本身是否为True，作用相当于去掉list中所有为false（或None）的元素。
	
520. Detect Capital.
	使用字符串内置函数：isupper(), islower(), istitle().
	
383. Ransom Note.
	使用collections.Counter()。collections.Counter(list)为list生成计数字典，如collections.Counter('abbbcc')输出Counter({'a':1, 'b':3, 'c':2})。Counter()计数字典支持+-运算，如collections.Counter('abbbcc') + collections.Counter('abcd') = Counter({'a':2, 'b':4, 'c':3, 'd':1}), collections.Counter('ab') + collections.Counter('aab') = Counter()。
	因此，if not Counter(list1) - Counter(list) == Ture，则list1是list2的子列表。该用法可用于带计数的子集判断（区别于集合子集）。
	若X不为0或者None，则not X返回True。在if语句中灵活使用not使代码更精简。
	
292. Nim Game.
	Nothing special.
	
485. Max Consecutive Onces.
	Nothing special.
	
448. Find All Numbers Disappeared in an Array.
	取绝对值函数：abs().
	range(n)会生成一个list，当n很大时会占用较大空间，而xrange(n)只是生成一个生成器。因此，尽量使用xrange(n).
	
406. Queue Reconstruction by Height.
	考察Greedy算法。当需要处理多个元素，且元素之间相互影响时，可以考虑Greedy算法是否可行。如果按照特定顺序（如按元素从大到小）来处理不会影响正确性时，Greedy算法就是可行的。
	sort()排序碰到多元素问题时，可以如下：list = [(2,3), (2,4), (4,5), (4,2)], list.sort(key = lambda x: (x[0], x[1])) 输出 [(2,3), (2,4), (4,2), (4,5)]，即先按第一个元素升序排序，再按第二个元素升序排序。若第二个元素要按降序排序，则list.sort(key = lambda x: (x[0], -x[1]))。list.sort()改变list的值，sorted(list)生成新的list（占用额外空间）。
